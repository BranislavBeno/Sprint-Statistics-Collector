plugins {
  id 'java'
  id 'java-library'
  id 'application'
  id 'jacoco'
  id 'com.github.johnrengelman.shadow' version '5.2.0'
  id 'org.sonarqube' version '2.8'
}

mainClassName = 'com.issue.runner.RunStats'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
  junitVersion = '5.6.2'
  sonarProjectName = 'SprintStats'
  sonarProjectKey = 'com.issue.sprintstats'
  jacocoDestinationFile = file("$buildDir/jacoco/test.exec")
}

repositories {
  mavenCentral()
}

test {
  useJUnitPlatform()
  jacoco {
    destinationFile = file(jacocoDestinationFile)
  }
  afterSuite { desc, result ->
    if (!desc.parent) {
      println "\nTest result: ${result.resultType}"
      println "Test summary: ${result.testCount} tests, " +
              "${result.successfulTestCount} succeeded, " +
              "${result.failedTestCount} failed, " +
              "${result.skippedTestCount} skipped"
    }
  }
}

dependencies {
  implementation "com.fasterxml.jackson.core:jackson-databind:2.11.0"
  implementation "org.apache.poi:poi-ooxml:4.1.2"
  implementation "org.apache.logging.log4j:log4j-core:2.13.3"
  implementation "org.apache.logging.log4j:log4j-api:2.13.3"
  implementation "info.picocli:picocli:4.3.2"
  implementation "org.mariadb.jdbc:mariadb-java-client:2.6.0"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
  testImplementation "org.junit.platform:junit-platform-launcher:1.6.2"
  testImplementation "org.assertj:assertj-core:3.16.1"
  testImplementation "org.mockito:mockito-junit-jupiter:3.3.3"
  testImplementation "com.h2database:h2:1.4.200"
  testCompileOnly "org.apiguardian:apiguardian-api:1.1.0"
}

def versionMajor = 2
def versionMinor = 6
def versionPatch = 1
def versionBuild = 10
version = "R${versionMajor}.${versionMinor}.${versionPatch}"

jar{
  manifest{
    attributes 'Specification-Title': rootProject.name,
    'Specification-Version': archiveVersion,
    'Implementation-Title': 'com.issue',
    'Implementation-Version': versionBuild,
    'Main-Class': 'com.issue.runner.RunStats'
  }
}

shadowJar{
  setArchiveFileName('SprintStatsCollector.jar')
}

jacoco {
  toolVersion = '0.8.2'
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}

sonarqube {
  properties {
    property "sonar.projectKey", "BranislavBeno_SprintStats"
  }
}
